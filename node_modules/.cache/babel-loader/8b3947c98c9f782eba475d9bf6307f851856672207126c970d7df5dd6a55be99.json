{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Downloads\\\\music-manager\\\\songs-manager\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useMemo, useReducer } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AUTH_KEY = 'mm_users';\nconst SESSION_KEY = 'mm_session';\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'login':\n      return {\n        ...state,\n        user: action.payload\n      };\n    case 'logout':\n      return {\n        ...state,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [users, setUsers] = useLocalStorage(AUTH_KEY, []);\n  const [state, dispatch] = useReducer(reducer, {\n    user: JSON.parse(localStorage.getItem(SESSION_KEY)) || null\n  });\n  const signup = useCallback((name, email, password) => {\n    const exists = users.some(u => u.email === email);\n    if (exists) throw new Error('Email already registered');\n    const newUsers = [...users, {\n      name,\n      email,\n      password\n    }];\n    setUsers(newUsers);\n    localStorage.setItem(SESSION_KEY, JSON.stringify({\n      email\n    }));\n    dispatch({\n      type: 'login',\n      payload: {\n        email,\n        name\n      }\n    });\n  }, [users, setUsers]);\n  const login = useCallback((email, password) => {\n    const match = users.find(u => u.email === email && u.password === password);\n    if (!match) throw new Error('Invalid credentials');\n    localStorage.setItem(SESSION_KEY, JSON.stringify({\n      email: match.email\n    }));\n    dispatch({\n      type: 'login',\n      payload: {\n        email: match.email,\n        name: match.name\n      }\n    });\n  }, [users]);\n  const logout = useCallback(() => {\n    localStorage.removeItem(SESSION_KEY);\n    dispatch({\n      type: 'logout'\n    });\n  }, []);\n  const value = useMemo(() => ({\n    user: state.user,\n    signup,\n    login,\n    logout\n  }), [state.user, signup, login, logout]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"k1+wBK2aG3G5VGZOvpisJmdvnf4=\", false, function () {\n  return [useLocalStorage];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useMemo","useReducer","useLocalStorage","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AUTH_KEY","SESSION_KEY","reducer","state","action","type","user","payload","AuthProvider","children","_s2","users","setUsers","dispatch","JSON","parse","localStorage","getItem","signup","name","email","password","exists","some","u","Error","newUsers","setItem","stringify","login","match","find","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abhishek/Downloads/music-manager/songs-manager/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useCallback, useContext, useMemo, useReducer } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst AuthContext = createContext(null);\nexport const useAuth = () => useContext(AuthContext);\n\nconst AUTH_KEY = 'mm_users';\nconst SESSION_KEY = 'mm_session';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'login':\n      return { ...state, user: action.payload };\n    case 'logout':\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n}\n\nexport function AuthProvider({ children }) {\n  const [users, setUsers] = useLocalStorage(AUTH_KEY, []);\n  const [state, dispatch] = useReducer(reducer, { user: JSON.parse(localStorage.getItem(SESSION_KEY)) || null });\n\n  const signup = useCallback((name, email, password) => {\n    const exists = users.some((u) => u.email === email);\n    if (exists) throw new Error('Email already registered');\n    const newUsers = [...users, { name, email, password }];\n    setUsers(newUsers);\n    localStorage.setItem(SESSION_KEY, JSON.stringify({ email }));\n    dispatch({ type: 'login', payload: { email, name } });\n  }, [users, setUsers]);\n\n  const login = useCallback((email, password) => {\n    const match = users.find((u) => u.email === email && u.password === password);\n    if (!match) throw new Error('Invalid credentials');\n    localStorage.setItem(SESSION_KEY, JSON.stringify({ email: match.email }));\n    dispatch({ type: 'login', payload: { email: match.email, name: match.name } });\n  }, [users]);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem(SESSION_KEY);\n    dispatch({ type: 'logout' });\n  }, []);\n\n  const value = useMemo(() => ({ user: state.user, signup, login, logout }), [state.user, signup, login, logout]);\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}